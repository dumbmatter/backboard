event listeners
  for bbgm, need to be able to listen to abort events to show user message on quota error
  allow bubbling of errors and allow listening to db.onabort, db.onerror, and db.onversionchange somehow
    currently disabled bubbling in some places
    default error handlers?
    db.on('abort', cb)

Better tests for transaction abort/error, and bubbling to db abort event

Index.openKeyCursor? maybe skip

Index.getKey

get rid of iterate advance feature. if anyone needs more cursor functions, should implement a more direct translation of cursor API like indexeddb-promised

add getAll to fakeIndexedDB, then use here
  why not use shim?

more concise schema definition, maybe use version as key of object and then the object stores are the value. only tricky part would be that you need to sort the keys before iterating over the schemas and you have to parse the string into a number

all those _wrapRequest calls (and definition) in DB.js and keyrange calls in index.js, not very DRY

what promise library (if any) should be shipped by default?

better way of passing Backboard around to stuff in lib

better documentation
  iterate arg order
  similar to
    https://github.com/jakearchibald/indexeddb-promised but a bit more idiosyncratic
    dexie
  but slightly nicer API, pluggable promise library, error handling
  feature detection in root.js - abstract into lib function, put in documentation
  limitations
    can't use event.preventDefault() to commit a transaction while ignoring an error in a request. couldn't figure out a good way to do it, and i don't personally use that feature anyway.

eslint indent won't work because it can't handle double indented function in argument to function that returns promise